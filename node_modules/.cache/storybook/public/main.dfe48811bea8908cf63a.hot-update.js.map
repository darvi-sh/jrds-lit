{"version":3,"file":"main.dfe48811bea8908cf63a.hot-update.js","sources":["webpack:///\\.)(","webpack:///./stories/3-Foundations/ResponsiveUI.stories.mdx"],"sourcesContent":["var map = {\n\t\"./1-GettingStarted/Architecture.stories.mdx\": \"./stories/1-GettingStarted/Architecture.stories.mdx\",\n\t\"./1-GettingStarted/Contribution.stories.mdx\": \"./stories/1-GettingStarted/Contribution.stories.mdx\",\n\t\"./1-GettingStarted/HowToUse.stories.mdx\": \"./stories/1-GettingStarted/HowToUse.stories.mdx\",\n\t\"./1-GettingStarted/Overview.stories.mdx\": \"./stories/1-GettingStarted/Overview.stories.mdx\",\n\t\"./2-Brand/Logo.stories.mdx\": \"./stories/2-Brand/Logo.stories.mdx\",\n\t\"./3-Foundations/AccessibilityAndInclusivity.stories.mdx\": \"./stories/3-Foundations/AccessibilityAndInclusivity.stories.mdx\",\n\t\"./3-Foundations/Contribution.stories.mdx\": \"./stories/3-Foundations/Contribution.stories.mdx\",\n\t\"./3-Foundations/HowToUse.stories.mdx\": \"./stories/3-Foundations/HowToUse.stories.mdx\",\n\t\"./3-Foundations/Layouts.stories.mdx\": \"./stories/3-Foundations/Layouts.stories.mdx\",\n\t\"./3-Foundations/Overview.stories.mdx\": \"./stories/3-Foundations/Overview.stories.mdx\",\n\t\"./3-Foundations/ResponsiveUI.stories.mdx\": \"./stories/3-Foundations/ResponsiveUI.stories.mdx\",\n\t\"./3-Foundations/Typography.stories.mdx\": \"./stories/3-Foundations/Typography.stories.mdx\",\n\t\"./Introduction.stories.mdx\": \"./stories/Introduction.stories.mdx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./stories sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta } from '@storybook/addon-docs';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Foundations/Layouts/Responsive UI\" mdxType=\"Meta\" />\n    <h1>{`Welcome to JobRad Design System Responsive UI`}</h1>\n    <p>{`This is a Responsive UI`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Foundations/Layouts/Responsive UI', includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AAGA;AAGA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;A","sourceRoot":""}